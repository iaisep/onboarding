# Dockerfile especÃ­fico para Coolify con soluciones DNS
FROM python:3.12-slim

# Fix DNS issues in Coolify environment
RUN echo "nameserver 8.8.8.8" > /etc/resolv.conf && \
    echo "nameserver 8.8.4.4" >> /etc/resolv.conf && \
    echo "nameserver 1.1.1.1" >> /etc/resolv.conf

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# Set work directory
WORKDIR /app

# Install system dependencies with retry mechanism
RUN for i in 1 2 3; do \
        apt-get update --fix-missing && \
        apt-get install -y --no-install-recommends \
            postgresql-client \
            build-essential \
            libpq-dev \
            curl \
            netcat-traditional \
            dnsutils \
            iputils-ping && \
        break || sleep 10; \
    done && \
    rm -rf /var/lib/apt/lists/*

# Test DNS resolution
RUN nslookup pypi.org || echo "DNS test failed but continuing..."

# Install Python dependencies with retry mechanism
COPY requirements-docker.txt .
RUN for i in 1 2 3; do \
        pip install --no-cache-dir --upgrade pip \
            --index-url https://pypi.org/simple/ \
            --trusted-host pypi.org \
            --trusted-host pypi.python.org \
            --trusted-host files.pythonhosted.org && \
        pip install --no-cache-dir -r requirements-docker.txt \
            --index-url https://pypi.org/simple/ \
            --trusted-host pypi.org \
            --trusted-host pypi.python.org \
            --trusted-host files.pythonhosted.org && \
        break || sleep 15; \
    done

# Copy project
COPY . .

# Create static files directory
RUN mkdir -p /app/static

# Create entrypoint script
COPY docker-entrypoint.sh /app/docker-entrypoint.sh
RUN chmod +x /app/docker-entrypoint.sh

# Create non-root user
RUN addgroup --system django && \
    adduser --system --group django

# Change ownership of the app directory
RUN chown -R django:django /app

# Switch to non-root user
USER django

# Expose port
EXPOSE 8000

# Health check with DNS test
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/admin/login/ || exit 1

# Use entrypoint script
ENTRYPOINT ["/app/docker-entrypoint.sh"]

# Default command
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "--timeout", "120", "apibase.wsgi:application"]
