version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REKOGNITION_ACCESS_KEY_ID=${AWS_REKOGNITION_ACCESS_KEY_ID}
      - AWS_REKOGNITION_SECRET_ACCESS_KEY=${AWS_REKOGNITION_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - AWS_S3_FACE_BUCKET=${AWS_S3_FACE_BUCKET}
      - AWS_S3_IMAGE_BUCKET=${AWS_S3_IMAGE_BUCKET}
      - OCR_MIN_CONFIDENCE=${OCR_MIN_CONFIDENCE}
      - FACE_MIN_CONFIDENCE=${FACE_MIN_CONFIDENCE}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    volumes:
      - static_volume:/app/static
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - app-network
    dns:
      - 8.8.8.8
      - 1.1.1.1

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
      - ./ssl:/etc/nginx/ssl  # For SSL certificates if needed
    depends_on:
      - web
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

volumes:
  static_volume:

networks:
  app-network:
    driver: bridge
